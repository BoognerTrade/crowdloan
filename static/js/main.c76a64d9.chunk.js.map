{"version":3,"sources":["config/index.js","substrate-lib/SubstrateContext.js","substrate-lib/utils.js","AccountSelector.js","BlockNumber.js","NodeInfo.js","substrate-lib/components/TxButton.js","Contribute.js","Crowdloan.js","App.js","index.js"],"names":["configEnv","require","types","envVars","reduce","mem","n","undefined","process","slice","config","configCommon","connectedSocket","PROVIDER_SOCKET","console","log","INIT_STATE","socket","jsonrpc","RPC","keyring","keyringState","api","apiError","apiState","reducer","state","action","type","payload","Error","loadAccts","SubstrateContext","React","createContext","SubstrateContextProvider","props","initState","forEach","key","useReducer","dispatch","provider","WsProvider","_api","ApiPromise","rpc","on","isReady","then","err","connect","asyncLoadAccounts","a","web3Enable","APP_NAME","web3Accounts","allAccounts","map","address","meta","name","source","loadAll","isDevelopment","DEVELOPMENT_KEYRING","error","loadAccounts","Provider","value","children","useSubstrate","useContext","utils","paramConversion","num","Main","setAccountAddress","useState","accountSelected","setAccountSelected","keyringOptions","getPairs","account","text","toUpperCase","icon","initialAddress","length","useEffect","Menu","attached","tabular","style","backgroundColor","borderColor","paddingTop","paddingBottom","Container","Image","src","size","position","alignItems","target","rel","href","Button","basic","circular","color","Dropdown","search","selection","clearable","placeholder","options","onChange","_","dropdown","BalanceAnnotation","accountBalance","setAccountBalance","unsubscribe","query","system","balance","data","free","toHuman","unsub","catch","Label","pointing","Icon","AccountSelector","finalized","blockNumber","setBlockNumber","blockNumberTimer","setBlockNumberTimer","bestNumber","derive","chain","bestNumberFinalized","unsubscribeAll","number","toNumber","timer","time","id","setInterval","clearInterval","Grid","Column","Card","Content","textAlign","Statistic","label","extra","BlockNumber","nodeInfo","setNodeInfo","Promise","all","version","nodeName","nodeVersion","getInfo","Header","Meta","Description","NodeInfo","TxButton","accountPair","setStatus","attrs","disabled","setUnsub","sudoKey","setSudoKey","palletRpc","callable","inputParams","paramFields","disableButton","isSudo","isUncheckedSudo","sudo","isEmpty","toString","acctPair","getFromAcct","isInjected","web3FromSource","injected","fromAcct","setSigner","signer","txResHandler","status","isFinalized","asFinalized","txErrHandler","sudoTx","transformed","transformParams","txExecute","tx","signAndSend","uncheckedSudoTx","sudoUncheckedWeight","signedTx","unsignedTx","send","queryResHandler","result","isNone","emptyAsNull","constant","consts","transaction","opts","paramVal","inputParam","trim","params","field","ind","memo","converted","indexOf","split","e","single","isNumType","Number","parseFloat","parseInt","some","el","onClick","every","paramField","param","optional","addressTo","amount","formState","setFormState","setDisableButton","width","Form","Field","Input","fluid","step","min","prev","Math","pow","overflowWrap","loading","setLoading","crowdLoan","setCrowdLoan","toHumanData","getCrowdLoanData","Object","keys","raised","end","cap","lastContribution","PreEnding","firstPeriod","lastPeriod","accountAddress","getPair","loader","Dimmer","active","Loader","centered","columns","padded","Message","negative","compact","floating","header","content","JSON","stringify","contextRef","createRef","ref","Sticky","context","stackable","Row","stretched","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c76a64d9.chunk.js","sourcesContent":["import configCommon from './common.json';\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`);\nconst types = require('./types.json');\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING'\n];\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\n  return mem;\n}, {});\n\nconst config = { ...configCommon, ...configEnv, ...envVars, types };\nexport default config;\n","import React, { useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc';\n// import queryString from 'query-string';\n\nimport { ApiPromise, WsProvider } from '@polkadot/api';\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp';\nimport keyring from '@polkadot/ui-keyring';\n\nimport config from '../config';\n\n// disables the user to enter query parameter for socket endpoint\n// const parsedQuery = queryString.parse(window.location.search);\n// const connectedSocket = parsedQuery.rpc || config.PROVIDER_SOCKET;\nconst connectedSocket = config.PROVIDER_SOCKET;\nconsole.log(`Connected socket: ${connectedSocket}`);\n\n///\n// Initial state for `useReducer`\n\nconst INIT_STATE = {\n  socket: connectedSocket,\n  jsonrpc: { ...jsonrpc, ...config.RPC },\n  types: config.types,\n  keyring: null,\n  keyringState: null,\n  api: null,\n  apiError: null,\n  apiState: null\n};\n\n///\n// Reducer function for `useReducer`\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CONNECT_INIT':\n      return { ...state, apiState: 'CONNECT_INIT' };\n\n    case 'CONNECT':\n      return { ...state, api: action.payload, apiState: 'CONNECTING' };\n\n    case 'CONNECT_SUCCESS':\n      return { ...state, apiState: 'READY' };\n\n    case 'CONNECT_ERROR':\n      return { ...state, apiState: 'ERROR', apiError: action.payload };\n\n    case 'LOAD_KEYRING':\n      return { ...state, keyringState: 'LOADING' };\n\n    case 'SET_KEYRING':\n      return { ...state, keyring: action.payload, keyringState: 'READY' };\n\n    case 'KEYRING_ERROR':\n      return { ...state, keyring: null, keyringState: 'ERROR' };\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n};\n\n///\n// Connecting to the Substrate node\n\nconst connect = (state, dispatch) => {\n  const { apiState, socket, jsonrpc, types } = state;\n  // We only want this function to be performed once\n  if (apiState) return;\n\n  dispatch({ type: 'CONNECT_INIT' });\n\n  const provider = new WsProvider(socket);\n  const _api = new ApiPromise({ provider, types, rpc: jsonrpc });\n\n  // Set listeners for disconnection and reconnection event.\n  _api.on('connected', () => {\n    dispatch({ type: 'CONNECT', payload: _api });\n    // `ready` event is not emitted upon reconnection and is checked explicitly here.\n    _api.isReady.then((_api) => dispatch({ type: 'CONNECT_SUCCESS' }));\n  });\n  _api.on('ready', () => dispatch({ type: 'CONNECT_SUCCESS' }));\n  _api.on('error', err => dispatch({ type: 'CONNECT_ERROR', payload: err }));\n};\n\n///\n// Loading accounts from dev and polkadot-js extension\n\nlet loadAccts = false;\nconst loadAccounts = (state, dispatch) => {\n  const asyncLoadAccounts = async () => {\n    dispatch({ type: 'LOAD_KEYRING' });\n    try {\n      await web3Enable(config.APP_NAME);\n      let allAccounts = await web3Accounts();\n      allAccounts = allAccounts.map(({ address, meta }) =>\n        ({ address, meta: { ...meta, name: `${meta.name} (${meta.source})` } }));\n      keyring.loadAll({ isDevelopment: config.DEVELOPMENT_KEYRING }, allAccounts);\n      dispatch({ type: 'SET_KEYRING', payload: keyring });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: 'KEYRING_ERROR' });\n    }\n  };\n\n  const { keyringState } = state;\n  // If `keyringState` is not null `asyncLoadAccounts` is running.\n  if (keyringState) return;\n  // If `loadAccts` is true, the `asyncLoadAccounts` has been run once.\n  if (loadAccts) return dispatch({ type: 'SET_KEYRING', payload: keyring });\n\n  // This is the heavy duty work\n  loadAccts = true;\n  asyncLoadAccounts();\n};\n\nconst SubstrateContext = React.createContext();\n\nconst SubstrateContextProvider = (props) => {\n  // filtering props and merge with default param value\n  const initState = { ...INIT_STATE };\n  const neededPropNames = ['socket', 'types'];\n  neededPropNames.forEach(key => {\n    initState[key] = (typeof props[key] === 'undefined' ? initState[key] : props[key]);\n  });\n\n  const [state, dispatch] = useReducer(reducer, initState);\n  connect(state, dispatch);\n  loadAccounts(state, dispatch);\n\n  return <SubstrateContext.Provider value={state}>\n    {props.children}\n  </SubstrateContext.Provider>;\n};\n\n// prop typechecking\nSubstrateContextProvider.propTypes = {\n  socket: PropTypes.string,\n  types: PropTypes.object\n};\n\nconst useSubstrate = () => ({ ...useContext(SubstrateContext) });\n\nexport { SubstrateContextProvider, useSubstrate };\n","const utils = {\n  paramConversion: {\n    num: [\n      'Compact<Balance>',\n      'BalanceOf',\n      'u8', 'u16', 'u32', 'u64', 'u128',\n      'i8', 'i16', 'i32', 'i64', 'i128'\n    ]\n  }\n};\n\nexport default utils;\n","import React, { useState, useEffect } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport {\n  Menu,\n  Button,\n  Dropdown,\n  Container,\n  Icon,\n  Image,\n  Label\n} from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { keyring } = useSubstrate();\n  const { setAccountAddress } = props;\n  const [accountSelected, setAccountSelected] = useState('');\n\n  // Get the list of accounts we possess the private key for\n  const keyringOptions = keyring.getPairs().map(account => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase(),\n    icon: 'user'\n  }));\n\n  const initialAddress =\n    keyringOptions.length > 0 ? keyringOptions[0].value : '';\n\n  // Set the initial address\n  useEffect(() => {\n    setAccountAddress(initialAddress);\n    setAccountSelected(initialAddress);\n  }, [setAccountAddress, initialAddress]);\n\n  const onChange = address => {\n    // Update state with new account address\n    setAccountAddress(address);\n    setAccountSelected(address);\n  };\n\n  return (\n    <Menu\n      attached='top'\n      tabular\n      style={{\n        backgroundColor: '#fff',\n        borderColor: '#fff',\n        paddingTop: '1em',\n        paddingBottom: '1em'\n      }}\n    >\n      <Container>\n        <Menu.Menu>\n          <Image src={`${process.env.PUBLIC_URL}/assets/substrate-logo.png`} size='mini' />\n        </Menu.Menu>\n        <Menu.Menu position='right' style={{ alignItems: 'center' }}>\n          { !accountSelected\n            ? <span>\n              Add your account with the{' '}\n              <a\n                target='_blank'\n                rel='noopener noreferrer'\n                href='https://github.com/polkadot-js/extension'\n              >\n                Polkadot JS Extension\n              </a>\n            </span>\n            : null }\n          <CopyToClipboard text={accountSelected}>\n            <Button\n              basic\n              circular\n              size='large'\n              icon='user'\n              color={accountSelected ? 'green' : 'red'}\n            />\n          </CopyToClipboard>\n          <Dropdown\n            search\n            selection\n            clearable\n            placeholder='Select an account'\n            options={keyringOptions}\n            onChange={(_, dropdown) => {\n              onChange(dropdown.value);\n            }}\n            value={accountSelected}\n          />\n          <BalanceAnnotation accountSelected={accountSelected} />\n        </Menu.Menu>\n      </Container>\n    </Menu>\n  );\n}\n\nfunction BalanceAnnotation (props) {\n  const { accountSelected } = props;\n  const { api } = useSubstrate();\n  const [accountBalance, setAccountBalance] = useState(0);\n\n  // When account address changes, update subscriptions\n  useEffect(() => {\n    let unsubscribe;\n\n    // If the user has selected an address, create a new subscription\n    accountSelected &&\n      api.query.system.account(accountSelected, balance => {\n        setAccountBalance(balance.data.free.toHuman());\n      })\n        .then(unsub => {\n          unsubscribe = unsub;\n        })\n        .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [api, accountSelected]);\n\n  return accountSelected\n    ? <Label pointing='left'>\n        <Icon name='money' color='green' />\n        {accountBalance}\n      </Label>\n    : null;\n}\n\nexport default function AccountSelector (props) {\n  const { api, keyring } = useSubstrate();\n  return keyring.getPairs && api.query ? <Main {...props} /> : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  const { finalized } = props;\n  const [blockNumber, setBlockNumber] = useState(0);\n  const [blockNumberTimer, setBlockNumberTimer] = useState(0);\n\n  const bestNumber = finalized\n    ? api.derive.chain.bestNumberFinalized\n    : api.derive.chain.bestNumber;\n\n  useEffect(() => {\n    let unsubscribeAll = null;\n\n    bestNumber(number => {\n      setBlockNumber(number.toNumber());\n      setBlockNumberTimer(0);\n    })\n      .then(unsub => {\n        unsubscribeAll = unsub;\n      })\n      .catch(console.error);\n\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [bestNumber]);\n\n  const timer = () => {\n    setBlockNumberTimer(time => time + 1);\n  };\n\n  useEffect(() => {\n    const id = setInterval(timer, 1000);\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content textAlign='center'>\n          <Statistic\n            label={(finalized ? 'Finalized' : 'Current') + ' Block'}\n            value={blockNumber}\n          />\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='time' /> {blockNumberTimer}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function BlockNumber (props) {\n  const { api } = useSubstrate();\n  return api.derive &&\n    api.derive.chain &&\n    api.derive.chain.bestNumber &&\n    api.derive.chain.bestNumberFinalized\n    ? <Main {...props} />\n    : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Card, Icon, Grid } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api, socket } = useSubstrate();\n  const [nodeInfo, setNodeInfo] = useState({});\n\n  useEffect(() => {\n    const getInfo = async () => {\n      try {\n        const [chain, nodeName, nodeVersion] = await Promise.all([\n          api.rpc.system.chain(),\n          api.rpc.system.name(),\n          api.rpc.system.version()\n        ]);\n        setNodeInfo({ chain, nodeName, nodeVersion });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    getInfo();\n  }, [api.rpc.system]);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content>\n          <Card.Header>{nodeInfo.nodeName}</Card.Header>\n          <Card.Meta>\n            <span>{nodeInfo.chain}</span>\n          </Card.Meta>\n          <Card.Description>{socket}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='setting' />v{nodeInfo.nodeVersion}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function NodeInfo (props) {\n  const { api } = useSubstrate();\n  return api.rpc &&\n    api.rpc.system &&\n    api.rpc.system.chain &&\n    api.rpc.system.name &&\n    api.rpc.system.version\n    ? <Main {...props} />\n    : null;\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\nimport { web3FromSource } from '@polkadot/extension-dapp';\n\nimport { useSubstrate } from '../';\nimport utils from '../utils';\n\nfunction TxButton ({\n  accountPair = null,\n  label,\n  setStatus,\n  color = 'blue',\n  style = null,\n  type = 'QUERY',\n  attrs = null,\n  disabled = false\n}) {\n  // Hooks\n  const { api } = useSubstrate();\n  const [unsub, setUnsub] = useState(null);\n  const [sudoKey, setSudoKey] = useState(null);\n\n  const { palletRpc, callable, inputParams, paramFields, disableButton } = attrs;\n\n  const isQuery = () => type === 'QUERY';\n  const isSudo = () => type === 'SUDO-TX';\n  const isUncheckedSudo = () => type === 'UNCHECKED-SUDO-TX';\n  const isUnsigned = () => type === 'UNSIGNED-TX';\n  const isSigned = () => type === 'SIGNED-TX';\n  const isRpc = () => type === 'RPC';\n  const isConstant = () => type === 'CONSTANT';\n\n  const loadSudoKey = () => {\n    (async function () {\n      if (!api || !api.query.sudo) { return; }\n      const sudoKey = await api.query.sudo.key();\n      sudoKey.isEmpty ? setSudoKey(null) : setSudoKey(sudoKey.toString());\n    })();\n  };\n\n  useEffect(loadSudoKey, [api]);\n\n  const getFromAcct = async () => {\n    const {\n      address,\n      meta: { source, isInjected }\n    } = accountPair;\n    let fromAcct;\n\n    // signer is from Polkadot-js browser extension\n    if (isInjected) {\n      const injected = await web3FromSource(source);\n      fromAcct = address;\n      api.setSigner(injected.signer);\n    } else {\n      fromAcct = accountPair;\n    }\n\n    return fromAcct;\n  };\n\n  const txResHandler = ({ status }) =>\n    status.isFinalized\n      ? setStatus(`😉 Finalized. Block hash: ${status.asFinalized.toString()}`)\n      : setStatus(`Current transaction status: ${status.type}`);\n\n  const txErrHandler = err =>\n    setStatus(`😞 Transaction Failed: ${err.toString()}`);\n\n  const sudoTx = async () => {\n    const fromAcct = await getFromAcct();\n    const transformed = transformParams(paramFields, inputParams);\n    // transformed can be empty parameters\n    const txExecute = transformed\n      ? api.tx.sudo.sudo(api.tx[palletRpc][callable](...transformed))\n      : api.tx.sudo.sudo(api.tx[palletRpc][callable]());\n\n    const unsub = txExecute.signAndSend(fromAcct, txResHandler)\n      .catch(txErrHandler);\n    setUnsub(() => unsub);\n  };\n\n  const uncheckedSudoTx = async () => {\n    const fromAcct = await getFromAcct();\n    const txExecute =\n      api.tx.sudo.sudoUncheckedWeight(api.tx[palletRpc][callable](...inputParams), 0);\n\n    const unsub = txExecute.signAndSend(fromAcct, txResHandler)\n      .catch(txErrHandler);\n    setUnsub(() => unsub);\n  };\n\n  const signedTx = async () => {\n    const fromAcct = await getFromAcct();\n    const transformed = transformParams(paramFields, inputParams);\n    // transformed can be empty parameters\n\n    const txExecute = transformed\n      ? api.tx[palletRpc][callable](...transformed)\n      : api.tx[palletRpc][callable]();\n\n    const unsub = await txExecute.signAndSend(fromAcct, txResHandler)\n      .catch(txErrHandler);\n    setUnsub(() => unsub);\n  };\n\n  const unsignedTx = async () => {\n    const transformed = transformParams(paramFields, inputParams);\n    // transformed can be empty parameters\n    const txExecute = transformed\n      ? api.tx[palletRpc][callable](...transformed)\n      : api.tx[palletRpc][callable]();\n\n    const unsub = await txExecute.send(txResHandler)\n      .catch(txErrHandler);\n    setUnsub(() => unsub);\n  };\n\n  const queryResHandler = result => {\n    result.isNone ? setStatus('None') : setStatus(result.toString());\n  };\n  const query = async () => {\n    const transformed = transformParams(paramFields, inputParams);\n    const unsub = await api.query[palletRpc][callable](...transformed, queryResHandler);\n    setUnsub(() => unsub);\n  };\n\n  const rpc = async () => {\n    const transformed = transformParams(paramFields, inputParams, { emptyAsNull: false });\n    const unsub = await api.rpc[palletRpc][callable](...transformed, queryResHandler);\n    setUnsub(() => unsub);\n  };\n\n  const constant = () => {\n    const result = api.consts[palletRpc][callable];\n    result.isNone ? setStatus('None') : setStatus(result.toString());\n  };\n\n  const transaction = async () => {\n    if (unsub) {\n      unsub();\n      setUnsub(null);\n    }\n\n    setStatus('Sending...');\n\n    (isSudo() && sudoTx()) ||\n      (isUncheckedSudo() && uncheckedSudoTx()) ||\n      (isSigned() && signedTx()) ||\n      (isUnsigned() && unsignedTx()) ||\n      (isQuery() && query()) ||\n      (isRpc() && rpc()) ||\n      (isConstant() && constant());\n  };\n\n  const transformParams = (paramFields, inputParams, opts = { emptyAsNull: true }) => {\n    // if `opts.emptyAsNull` is true, empty param value will be added to res as `null`.\n    //   Otherwise, it will not be added\n    const paramVal = inputParams.map(inputParam => {\n      // To cater the js quirk that `null` is a type of `object`.\n      if (typeof inputParam === 'object' && inputParam !== null && typeof inputParam.value === 'string') {\n        return inputParam.value.trim();\n      } else if (typeof inputParam === 'string') {\n        return inputParam.trim();\n      }\n      return inputParam;\n    });\n    const params = paramFields.map((field, ind) => ({ ...field, value: paramVal[ind] || null }));\n\n    return params.reduce((memo, { type = 'string', value }) => {\n      if (value == null || value === '') return (opts.emptyAsNull ? [...memo, null] : memo);\n\n      let converted = value;\n\n      // Deal with a vector\n      if (type.indexOf('Vec<') >= 0) {\n        converted = converted.split(',').map(e => e.trim());\n        converted = converted.map(single => isNumType(type)\n          ? (single.indexOf('.') >= 0 ? Number.parseFloat(single) : Number.parseInt(single))\n          : single\n        );\n        return [...memo, converted];\n      }\n\n      // Deal with a single value\n      if (isNumType(type)) {\n        converted = converted.indexOf('.') >= 0 ? Number.parseFloat(converted) : Number.parseInt(converted);\n      }\n      return [...memo, converted];\n    }, []);\n  };\n\n  const isNumType = type =>\n    utils.paramConversion.num.some(el => type.indexOf(el) >= 0);\n\n  const allParamsFilled = () => {\n    if (paramFields.length === 0) { return true; }\n\n    return paramFields.every((paramField, ind) => {\n      const param = inputParams[ind];\n      if (paramField.optional) { return true; }\n      if (param == null) { return true; }\n\n      const value = typeof param === 'object' ? param.value : param;\n      return value !== null && value !== '';\n    });\n  };\n\n  const isSudoer = acctPair => {\n    if (!sudoKey || !acctPair) { return false; }\n    return acctPair.address === sudoKey;\n  };\n\n  return (\n    <Button\n      basic\n      color={color}\n      style={style}\n      type='submit'\n      onClick={transaction}\n      disabled={disabled || !palletRpc || !callable || !allParamsFilled() || accountPair === '' || disableButton ||\n        ((isSudo() || isUncheckedSudo()) && !isSudoer(accountPair))}\n    >\n      {label}\n    </Button>\n  );\n}\n\n// prop type checking\nTxButton.propTypes = {\n  accountPair: PropTypes.object,\n  setStatus: PropTypes.func.isRequired,\n  type: PropTypes.oneOf([\n    'QUERY', 'RPC', 'SIGNED-TX', 'UNSIGNED-TX', 'SUDO-TX', 'UNCHECKED-SUDO-TX',\n    'CONSTANT']).isRequired,\n  attrs: PropTypes.shape({\n    palletRpc: PropTypes.string,\n    callable: PropTypes.string,\n    inputParams: PropTypes.array,\n    paramFields: PropTypes.array\n  }).isRequired\n};\n\nfunction TxGroupButton (props) {\n  return (\n    <Button.Group>\n      <TxButton\n        label='Unsigned'\n        type='UNSIGNED-TX'\n        color='grey'\n        {...props}\n      />\n      <Button.Or />\n      <TxButton\n        label='Signed'\n        type='SIGNED-TX'\n        color='blue'\n        {...props}\n      />\n      <Button.Or />\n      <TxButton\n        label='SUDO'\n        type='SUDO-TX'\n        color='red'\n        {...props}\n      />\n    </Button.Group>\n  );\n}\n\nexport { TxButton, TxGroupButton };\n","import React, { useState } from 'react';\nimport { Form, Input, Grid } from 'semantic-ui-react';\nimport { TxButton } from './substrate-lib/components';\n\nexport default function Main (props) {\n  const [status, setStatus] = useState(null);\n  const [formState, setFormState] = useState({ addressTo: null, amount: 0 });\n  const { accountPair } = props;\n  const [disableButton, setDisableButton] = useState(true);\n  const onChange = (_, data) => {\n    setFormState(prev => ({ ...prev, [data.state]: data.value }));\n    if (data.value === \"\" || data.value <= 0) {\n      setDisableButton(true);\n    }\n    else { setDisableButton(false); }\n  }\n\n  const { amount } = formState;\n  const paraId = '2015';\n\n  return (\n    <Grid.Column width={8}>\n      <h1>Contribute</h1>\n      <Form>\n        <Form.Field>\n          <Input\n            fluid\n            label='Amount in KSM'\n            type='number'\n            value={amount}\n            state='amount'\n            step='0.1'\n            min={0.1}\n            onChange={onChange}\n          />\n        </Form.Field>\n        <Form.Field style={{ textAlign: 'center' }}>\n          <TxButton\n            accountPair={accountPair}\n            label='Contribute'\n            type='SIGNED-TX'\n            setStatus={setStatus}\n            attrs={{\n              palletRpc: 'crowdloan',\n              callable: 'contribute',\n              inputParams: [paraId, amount * Math.pow(10, 12), null],\n              paramFields: [true, true, false],\n              disableButton: disableButton\n            }}\n          />\n        </Form.Field>\n        <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n      </Form>\n    </Grid.Column>\n  );\n}\n","import React, { useState } from 'react';\r\nimport { useSubstrate } from './substrate-lib';\r\n// to flatten nested JSON\r\n// var flatten = require('flat')\r\n\r\nexport default function Main (props) {\r\n  const { api } = useSubstrate();\r\n  const [loading, setLoading] = useState(true);\r\n  let [crowdLoan, setCrowdLoan] = useState({\r\n    // raised: null,\r\n    // end: null,\r\n    // cap: null,\r\n    // lastContribution: { preEnding: null },\r\n    // firstPeriod: null,\r\n    // lastPeriod: null,\r\n  });\r\n\r\n  const queryResHandler = result => {\r\n    const toHumanData = result.toHuman();\r\n    setCrowdLoan(crowdLoan = (toHumanData));\r\n    // to flatten nested JSON\r\n    // setcrowdLoan(crowdLoan = flatten(data));\r\n    setLoading(false);\r\n  };\r\n  const transformed = ['2004'];\r\n  const palletRpc = 'crowdloan';\r\n  const callable = 'funds';\r\n\r\n  const getCrowdLoanData = async () => {\r\n    await api.query[palletRpc][callable](...transformed, queryResHandler);\r\n  };\r\n\r\n  if (Object.keys(crowdLoan).length === 0) {\r\n    getCrowdLoanData();\r\n  }\r\n\r\n  return (\r\n        <div>\r\n            <h1>Crowdloan Funds</h1>\r\n            {loading\r\n              ? (\r\n                    <div>loading...</div>\r\n                )\r\n              : (\r\n                    <div>\r\n                        {/* dynamic rendering of key, value pair of json: needs to be flattened! */}\r\n                        {/* {Object.keys(crowdLoan).map((key, i) => (\r\n                            <p key={i}>\r\n                                <span>{key}: </span>\r\n                                <span>{crowdLoan[key]}</span>\r\n                            </p>\r\n                        ))} */}\r\n                        <div>raised: {(crowdLoan.raised)}</div>\r\n                        <div>end: {crowdLoan.end}</div>\r\n                        <div>cap: {(crowdLoan.cap)}</div>\r\n                        <div>last_contribution.preEnding: {crowdLoan.lastContribution.PreEnding}</div>\r\n                        <div>first_period: {crowdLoan.firstPeriod}</div>\r\n                        <div>last_period: {crowdLoan.lastPeriod}</div>\r\n                    </div>\r\n                )}\r\n        </div >\r\n  );\r\n}\r\n","import React, { useState, createRef } from 'react';\nimport { Container, Dimmer, Loader, Grid, Sticky, Message } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport { SubstrateContextProvider, useSubstrate } from './substrate-lib';\n\nimport AccountSelector from './AccountSelector';\nimport BlockNumber from './BlockNumber';\nimport NodeInfo from './NodeInfo';\nimport Contribute from './Contribute';\nimport Crowdloan from './Crowdloan';\n\nfunction Main () {\n  const [accountAddress, setAccountAddress] = useState(null);\n  const { apiState, keyring, keyringState, apiError } = useSubstrate();\n  const accountPair =\n    accountAddress &&\n    keyringState === 'READY' &&\n    keyring.getPair(accountAddress);\n\n  const loader = text =>\n    <Dimmer active>\n      <Loader size='small'>{text}</Loader>\n    </Dimmer>;\n\n  const message = err =>\n    <Grid centered columns={2} padded>\n      <Grid.Column>\n        <Message negative compact floating\n          header='Error Connecting to Substrate'\n          content={`${JSON.stringify(err, null, 4)}`}\n        />\n      </Grid.Column>\n    </Grid>;\n\n  if (apiState === 'ERROR') return message(apiError);\n  else if (apiState !== 'READY') return loader('Connecting to Kusama');\n\n  if (keyringState !== 'READY') {\n    return loader('Loading accounts (please review any extension\\'s authorization)');\n  }\n\n  const contextRef = createRef();\n\n  return (\n    <div ref={contextRef}>\n      <Sticky context={contextRef}>\n        <AccountSelector setAccountAddress={setAccountAddress} />\n      </Sticky>\n      <Container>\n        <Grid stackable columns='equal'>\n          <Grid.Row stretched>\n            <NodeInfo />\n            <BlockNumber />\n          </Grid.Row>\n          <Grid.Row>\n            <Crowdloan />\n          </Grid.Row>\n          <Grid.Row>\n            <Contribute accountPair={accountPair} />\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default function App () {\n  return (\n    <SubstrateContextProvider>\n      <Main />\n    </SubstrateContextProvider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}